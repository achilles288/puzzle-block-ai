/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class puzzleblock_PuzzleBlock_AI */

#ifndef _Included_puzzleblock_PuzzleBlock_AI
#define _Included_puzzleblock_PuzzleBlock_AI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     puzzleblock_PuzzleBlock_AI
 * Method:    startRouteFinding
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_puzzleblock_PuzzleBlock_1AI_startRouteFinding
  (JNIEnv *, jobject);

/*
 * Class:     puzzleblock_PuzzleBlock_AI
 * Method:    clearRouteFinding
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_puzzleblock_PuzzleBlock_1AI_clearRouteFinding
  (JNIEnv *, jobject);

/*
 * Class:     puzzleblock_PuzzleBlock_AI
 * Method:    getBlockIndex_nextMove
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_puzzleblock_PuzzleBlock_1AI_getBlockIndex_1nextMove
  (JNIEnv *, jobject);

/*
 * Class:     puzzleblock_PuzzleBlock_AI
 * Method:    randomBlocks
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_puzzleblock_PuzzleBlock_1AI_randomBlocks
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif

namespace jni {
  jclass puzzleAIClass;
   jfieldID idBoard;
   jobject board;
  jclass boardClass;
   jfieldID idCol, idRow, idBlankIndex, idBlockArray;
   int col, row, blankIndex;
   jobject blockArrayObj;
   jobjectArray *blockArray;
   jobject *blocks;
   int blockArrayLen;
  jclass blockClass;
   jfieldID idX, idY;

}
  void fetchJavaObjects(JNIEnv *env, jobject obj);

#endif
